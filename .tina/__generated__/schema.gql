# DO NOT MODIFY THIS FILE. This file is automatically generated by Tina
interface Node {
  id: ID!
}

interface Document {
  sys: SystemInfo
  id: ID!
}

interface FormField {
  label: String
  name: String
  component: String
}

"""References another document, used as a foreign key"""
scalar Reference

""""""
scalar JSON

""""""
scalar JSONObject

type SelectOption {
  label: String
  value: String
}

type SystemInfo {
  filename: String
  basename: String
  breadcrumbs(excludeExtension: Boolean): [String]
  path: String
  relativePath: String
  extension: String
  template: String
  collection: Section
}

type Section {
  type: String
  path: String
  format: String
  label: String
  create: String
  match: String
  new_doc_ext: String
  templates: [String]
  slug: String
  documents: [Document]
}

union SectionDocumentUnion = Posts_Document | Author_Document

input SectionParams {
  posts: Posts_Input
  author: Author_Input
}

type Mutation {
  addPendingDocument(relativePath: String, collection: String, template: String): Document
  updateDocument(relativePath: String, params: SectionParams): SectionDocumentUnion
  updatePostsDocument(relativePath: String, params: Posts_Input): Posts_Document
  updateAuthorDocument(relativePath: String, params: Author_Input): Author_Document
}

type Query {
  node(id: ID!): Node
  getDocument(collection: String, relativePath: String): SectionDocumentUnion
  getCollections: [Section]
  getCollection(collection: String): Section
  getPostsDocument(relativePath: String): Posts_Document
  getPostsList: [Posts_Document]
  getAuthorDocument(relativePath: String): Author_Document
  getAuthorList: [Author_Document]
}

union Posts_Data = Basic_Doc_Data

input Posts_Input {
  basic: Basic_Doc_Input
}

union Posts_Values = Basic_Doc_Values

union Posts_Form = Basic_Doc_Form

type Posts_Document implements Node & Document {
  id: ID!
  sys: SystemInfo
  data: Posts_Data
  values: Posts_Values
  form: Posts_Form
}

type LongFormText_Data {
  content: String
}

type Img_Data {
  img: String
}

type Iframe_Data {
  url: String
}

union Basic_Blocks_Data = LongFormText_Data | Img_Data | Iframe_Data

type Basic_Doc_Data {
  blocks: [Basic_Blocks_Data]
  date: String
  minRead: String
  title: String
  author: Author_Document
  description: String
  tags: [String]
  _body: String
}

type LongFormText_Values {
  content: String
  _template: String
}

type Img_Values {
  img: String
  _template: String
}

type Iframe_Values {
  url: String
  _template: String
}

union Basic_Blocks_Values = LongFormText_Values | Img_Values | Iframe_Values

type Basic_Doc_Values {
  blocks: [Basic_Blocks_Values]
  date: String
  minRead: String
  title: String
  author: Reference
  description: String
  tags: [String]
  _body: String
  _template: String
}

type TextareaField implements FormField {
  name: String
  label: String
  component: String
  description: String
}

union LongFormText_FormFieldsUnion = TextareaField

type LongFormText_Form {
  label: String
  name: String
  fields: [LongFormText_FormFieldsUnion]
}

type FileField implements FormField {
  name: String
  label: String
  component: String
  description: String
}

union Img_FormFieldsUnion = FileField

type Img_Form {
  label: String
  name: String
  fields: [Img_FormFieldsUnion]
}

type TextField implements FormField {
  name: String
  label: String
  component: String
  description: String
}

union Iframe_FormFieldsUnion = TextField

type Iframe_Form {
  label: String
  name: String
  fields: [Iframe_FormFieldsUnion]
}

type Basic_Blocks_BlocksFieldTemplates {
  longFormText: LongFormText_Form
  img: Img_Form
  iframe: Iframe_Form
}

type Basic_Blocks_BlocksField implements FormField {
  name: String
  label: String
  component: String
  description: String
  templates: Basic_Blocks_BlocksFieldTemplates
}

type DatetimeField implements FormField {
  name: String
  label: String
  component: String
  description: String
  dateFormat: String
  timeFormat: String
}

type SelectField implements FormField {
  name: String
  label: String
  component: String
  description: String
  options: [SelectOption]
}

type TagListField implements FormField {
  name: String
  label: String
  component: String
  description: String
}

union Basic_Doc_FormFieldsUnion = Basic_Blocks_BlocksField | DatetimeField | TextField | SelectField | TextareaField | TagListField

type Basic_Doc_Form {
  label: String
  name: String
  fields: [Basic_Doc_FormFieldsUnion]
}

input LongFormText_Input {
  content: String
}

input Img_Input {
  img: String
}

input Iframe_Input {
  url: String
}

input Blocks_Input {
  longFormText: LongFormText_Input
  img: Img_Input
  iframe: Iframe_Input
}

input Basic_Doc_Input {
  blocks: [Blocks_Input]
  date: String
  minRead: String
  title: String
  author: String
  description: String
  tags: [String]
  _body: String
}

union Author_Data = Author_Doc_Data

input Author_Input {
  author: Author_Doc_Input
}

union Author_Values = Author_Doc_Values

union Author_Form = Author_Doc_Form

type Author_Document implements Node & Document {
  id: ID!
  sys: SystemInfo
  data: Author_Data
  values: Author_Values
  form: Author_Form
}

type Author_Doc_Data {
  name: String
  avatar: String
  _body: String
}

type Author_Doc_Values {
  name: String
  avatar: String
  _body: String
  _template: String
}

union Author_Doc_FormFieldsUnion = TextField | TextareaField

type Author_Doc_Form {
  label: String
  name: String
  fields: [Author_Doc_FormFieldsUnion]
}

input Author_Doc_Input {
  name: String
  avatar: String
  _body: String
}

  