// DO NOT MODIFY THIS FILE. This file is automatically generated by Tina
export type Maybe<T> = T | null;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
  /** References another document, used as a foreign key */
  Reference: any;
  JSON: any;
  JSONObject: any;
};

export type Node = {
  id: Scalars['ID'];
};

export type Document = {
  sys?: Maybe<SystemInfo>;
  id: Scalars['ID'];
};

export type FormField = {
  label?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  component?: Maybe<Scalars['String']>;
};




export type SystemInfo = {
  __typename?: 'SystemInfo';
  filename?: Maybe<Scalars['String']>;
  basename?: Maybe<Scalars['String']>;
  breadcrumbs?: Maybe<Array<Maybe<Scalars['String']>>>;
  path?: Maybe<Scalars['String']>;
  relativePath?: Maybe<Scalars['String']>;
  extension?: Maybe<Scalars['String']>;
  template?: Maybe<Scalars['String']>;
  collection?: Maybe<Section>;
};


export type SystemInfoBreadcrumbsArgs = {
  excludeExtension?: Maybe<Scalars['Boolean']>;
};

export type Section = {
  __typename?: 'Section';
  type?: Maybe<Scalars['String']>;
  path?: Maybe<Scalars['String']>;
  label?: Maybe<Scalars['String']>;
  create?: Maybe<Scalars['String']>;
  match?: Maybe<Scalars['String']>;
  new_doc_ext?: Maybe<Scalars['String']>;
  templates?: Maybe<Array<Maybe<Scalars['String']>>>;
  slug?: Maybe<Scalars['String']>;
  documents?: Maybe<Array<Maybe<Document>>>;
};

export type SectionDocumentUnion = Posts_Document | Author_Document;

export type SectionParams = {
  posts?: Maybe<Posts_Input>;
  author?: Maybe<Author_Input>;
};

export type Mutation = {
  __typename?: 'Mutation';
  addPendingDocument?: Maybe<Document>;
  updateDocument?: Maybe<SectionDocumentUnion>;
  updatePostsDocument?: Maybe<Posts_Document>;
  updateAuthorDocument?: Maybe<Author_Document>;
};


export type MutationAddPendingDocumentArgs = {
  relativePath?: Maybe<Scalars['String']>;
  collection?: Maybe<Scalars['String']>;
  template?: Maybe<Scalars['String']>;
};


export type MutationUpdateDocumentArgs = {
  relativePath?: Maybe<Scalars['String']>;
  params?: Maybe<SectionParams>;
};


export type MutationUpdatePostsDocumentArgs = {
  relativePath?: Maybe<Scalars['String']>;
  params?: Maybe<Posts_Input>;
};


export type MutationUpdateAuthorDocumentArgs = {
  relativePath?: Maybe<Scalars['String']>;
  params?: Maybe<Author_Input>;
};

export type Query = {
  __typename?: 'Query';
  node?: Maybe<Node>;
  getDocument?: Maybe<SectionDocumentUnion>;
  getCollections?: Maybe<Array<Maybe<Section>>>;
  getCollection?: Maybe<Section>;
  getPostsDocument?: Maybe<Posts_Document>;
  getPostsList?: Maybe<Array<Maybe<Posts_Document>>>;
  getAuthorDocument?: Maybe<Author_Document>;
  getAuthorList?: Maybe<Array<Maybe<Author_Document>>>;
};


export type QueryNodeArgs = {
  id: Scalars['ID'];
};


export type QueryGetDocumentArgs = {
  collection?: Maybe<Scalars['String']>;
  relativePath?: Maybe<Scalars['String']>;
};


export type QueryGetCollectionArgs = {
  collection?: Maybe<Scalars['String']>;
};


export type QueryGetPostsDocumentArgs = {
  relativePath?: Maybe<Scalars['String']>;
};


export type QueryGetAuthorDocumentArgs = {
  relativePath?: Maybe<Scalars['String']>;
};

export type Posts_Data = Basic_Doc_Data;

export type Posts_Input = {
  basic?: Maybe<Basic_Doc_Input>;
};

export type Posts_Values = Basic_Doc_Values;

export type Posts_Form = Basic_Doc_Form;

export type Posts_Document = Node & Document & {
  __typename?: 'Posts_Document';
  id: Scalars['ID'];
  sys?: Maybe<SystemInfo>;
  data?: Maybe<Posts_Data>;
  values?: Maybe<Posts_Values>;
  form?: Maybe<Posts_Form>;
};

export type LongFormText_Data = {
  __typename?: 'LongFormText_Data';
  content?: Maybe<Scalars['String']>;
};

export type Iframe_Data = {
  __typename?: 'Iframe_Data';
  url?: Maybe<Scalars['String']>;
};

export type Basic_Blocks_Data = LongFormText_Data | Iframe_Data;

export type Basic_Doc_Data = {
  __typename?: 'Basic_Doc_Data';
  blocks?: Maybe<Array<Maybe<Basic_Blocks_Data>>>;
  date?: Maybe<Scalars['String']>;
  minRead?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  author?: Maybe<Author_Document>;
  description?: Maybe<Scalars['String']>;
  tags?: Maybe<Array<Maybe<Scalars['String']>>>;
  _body?: Maybe<Scalars['String']>;
};

export type LongFormText_Values = {
  __typename?: 'LongFormText_Values';
  content?: Maybe<Scalars['String']>;
  _template?: Maybe<Scalars['String']>;
};

export type Iframe_Values = {
  __typename?: 'Iframe_Values';
  url?: Maybe<Scalars['String']>;
  _template?: Maybe<Scalars['String']>;
};

export type Basic_Blocks_Values = LongFormText_Values | Iframe_Values;

export type Basic_Doc_Values = {
  __typename?: 'Basic_Doc_Values';
  blocks?: Maybe<Array<Maybe<Basic_Blocks_Values>>>;
  date?: Maybe<Scalars['String']>;
  minRead?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  author?: Maybe<Scalars['Reference']>;
  description?: Maybe<Scalars['String']>;
  tags?: Maybe<Array<Maybe<Scalars['String']>>>;
  _body?: Maybe<Scalars['String']>;
  _template?: Maybe<Scalars['String']>;
};

export type TextareaField = FormField & {
  __typename?: 'TextareaField';
  name?: Maybe<Scalars['String']>;
  label?: Maybe<Scalars['String']>;
  component?: Maybe<Scalars['String']>;
};

export type LongFormText_FormFieldsUnion = TextareaField;

export type LongFormText_Form = {
  __typename?: 'LongFormText_Form';
  label?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  fields?: Maybe<Array<Maybe<LongFormText_FormFieldsUnion>>>;
};

export type TextField = FormField & {
  __typename?: 'TextField';
  name?: Maybe<Scalars['String']>;
  label?: Maybe<Scalars['String']>;
  component?: Maybe<Scalars['String']>;
};

export type Iframe_FormFieldsUnion = TextField;

export type Iframe_Form = {
  __typename?: 'Iframe_Form';
  label?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  fields?: Maybe<Array<Maybe<Iframe_FormFieldsUnion>>>;
};

export type Basic_Blocks_BlocksFieldTemplates = {
  __typename?: 'Basic_Blocks_BlocksFieldTemplates';
  longFormText?: Maybe<LongFormText_Form>;
  iframe?: Maybe<Iframe_Form>;
};

export type Basic_Blocks_BlocksField = FormField & {
  __typename?: 'Basic_Blocks_BlocksField';
  name?: Maybe<Scalars['String']>;
  label?: Maybe<Scalars['String']>;
  component?: Maybe<Scalars['String']>;
  templates?: Maybe<Basic_Blocks_BlocksFieldTemplates>;
};

export type DatetimeField = FormField & {
  __typename?: 'DatetimeField';
  name?: Maybe<Scalars['String']>;
  label?: Maybe<Scalars['String']>;
  component?: Maybe<Scalars['String']>;
  dateFormat?: Maybe<Scalars['String']>;
  timeFormat?: Maybe<Scalars['String']>;
};

export type SelectField = FormField & {
  __typename?: 'SelectField';
  name?: Maybe<Scalars['String']>;
  label?: Maybe<Scalars['String']>;
  component?: Maybe<Scalars['String']>;
  options?: Maybe<Array<Maybe<Scalars['String']>>>;
};

export type TagListField = FormField & {
  __typename?: 'TagListField';
  name?: Maybe<Scalars['String']>;
  label?: Maybe<Scalars['String']>;
  component?: Maybe<Scalars['String']>;
};

export type Basic_Doc_FormFieldsUnion = Basic_Blocks_BlocksField | DatetimeField | TextField | SelectField | TextareaField | TagListField;

export type Basic_Doc_Form = {
  __typename?: 'Basic_Doc_Form';
  label?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  fields?: Maybe<Array<Maybe<Basic_Doc_FormFieldsUnion>>>;
};

export type LongFormText_Input = {
  content?: Maybe<Scalars['String']>;
};

export type Iframe_Input = {
  url?: Maybe<Scalars['String']>;
};

export type Blocks_Input = {
  longFormText?: Maybe<LongFormText_Input>;
  iframe?: Maybe<Iframe_Input>;
};

export type Basic_Doc_Input = {
  blocks?: Maybe<Array<Maybe<Blocks_Input>>>;
  date?: Maybe<Scalars['String']>;
  minRead?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  author?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  tags?: Maybe<Array<Maybe<Scalars['String']>>>;
  _body?: Maybe<Scalars['String']>;
};

export type Author_Data = Author_Doc_Data;

export type Author_Input = {
  author?: Maybe<Author_Doc_Input>;
};

export type Author_Values = Author_Doc_Values;

export type Author_Form = Author_Doc_Form;

export type Author_Document = Node & Document & {
  __typename?: 'Author_Document';
  id: Scalars['ID'];
  sys?: Maybe<SystemInfo>;
  data?: Maybe<Author_Data>;
  values?: Maybe<Author_Values>;
  form?: Maybe<Author_Form>;
};

export type Author_Doc_Data = {
  __typename?: 'Author_Doc_Data';
  name?: Maybe<Scalars['String']>;
  avatar?: Maybe<Scalars['String']>;
  _body?: Maybe<Scalars['String']>;
};

export type Author_Doc_Values = {
  __typename?: 'Author_Doc_Values';
  name?: Maybe<Scalars['String']>;
  avatar?: Maybe<Scalars['String']>;
  _body?: Maybe<Scalars['String']>;
  _template?: Maybe<Scalars['String']>;
};

export type Author_Doc_FormFieldsUnion = TextField | TextareaField;

export type Author_Doc_Form = {
  __typename?: 'Author_Doc_Form';
  label?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  fields?: Maybe<Array<Maybe<Author_Doc_FormFieldsUnion>>>;
};

export type Author_Doc_Input = {
  name?: Maybe<Scalars['String']>;
  avatar?: Maybe<Scalars['String']>;
  _body?: Maybe<Scalars['String']>;
};

